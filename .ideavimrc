inoremap jk <ESC>

set ignorecase
set smartcase
set incsearch
set number
set relativenumber
set nowrap
set vb
set ruler
set surround
set multiple-cursors
set commentary

let g:buftabs_only_basename=1
let g:buftabs_marker_modified = "+"

set tabstop=4
set shiftwidth=4
set hidden
set scrolloff=3
filetype indent on
filetype plugin on
set autoindent

let mapleader = " "

map <Leader>r :action RenameElement<CR>
map <Leader>u :action FindUsages<CR>
map <Leader>s :action FileStructurePopup<CR>
map <Leader>g :action Generate<CR>
map <Leader>f :action RecentLocations<CR>
map <Leader>o :action JumpToLastChange<CR>
map <leader>q :action QuickJavaDoc<CR>
map <leader>/ :action ToggleInlineHintsAction<CR>
map <leader>d :action ToggleDistractionFreeMode<CR>
imap <C-v> <Esc>:action $Paste<CR>

map <C-A-j> :action MoveLineDown<CR>
map <C-A-k> :action MoveLineUp<CR>
map gh :action ShowErrorDescription<CR>

"*************************************** CURSIVE **********************************************

"allow deletion of previously entered data in insert mode
set backspace=indent,eol,start

" vim delete and change, with sexps!
map <leader>x :action :cursive.actions.paredit/kill-sexp<CR>
map <leader>c :action :cursive.actions.paredit/kill-sexp<CR>i

" Since kill copies to system clipboard, it's nice to have easy access to clipboard paste
map <leader>p "+p

" Sexp editing mappings straight from paredit.vim
map <leader>J :action :cursive.actions.paredit/join<CR>
map <leader>O :action :cursive.actions.paredit/split<CR>
map <leader>S :action :cursive.actions.paredit/splice<CR>
map <leader>I :action :cursive.actions.paredit/raise<CR>

" Splice backwards and forwards
map <leader>k :action :cursive.actions.paredit/splice-killing-backwards<CR>
map <leader>j :action :cursive.actions.paredit/splice-killing-forwards<CR>

" Slurp and barf
map <leader>l :action :cursive.actions.paredit/barf-forwards<CR> 
map <leader>h :action :cursive.actions.paredit/slurp-forwards<CR>
map <leader>L :action :cursive.actions.paredit/slurp-backwards<CR>
map <leader>H :action :cursive.actions.paredit/barf-backwards<CR> 

" leader + wrapping symbol for wrapping
map <leader>( :action :cursive.actions.paredit/wrap-paren<CR>
map <leader>[ :action :cursive.actions.paredit/wrap-square<CR>
map <leader>{ :action :cursive.actions.paredit/wrap-curly<CR>
map <leader>" :action :cursive.actions.paredit/wrap-quotes<CR>

" try to setup jump to repl and back
map <leader>n :action :cursive.repl.actions/jump-to-repl<CR>
map <leader>m :action FocusEditor<CR>

" Cycle collection
map <leader>C :action :cursive.actions.paredit/cycle-collection-type<CR>

" Evaluate sexp like in vim-fireplace
map cpp :action :cursive.repl.actions/run-top-sexp<CR>
map <leader>e :action :cursive.repl.actions/run-top-sexp<CR>
"*************************************** CURSIVE **********************************************
